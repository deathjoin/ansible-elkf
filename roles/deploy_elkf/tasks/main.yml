- name: Find current host services
  set_fact:
    # stack version
    elkf_stack_version: "{{ elkf_stack.version | default(elkf_default_version) }}"
    # cluster name
    elkf_stack_name: "{{ elkf_stack.name | default(elkf_default_stack_name) }}"
    # services for current host
    elkf_host_services: "{{ 
      elkf_stack['hosts_configuration'] | 
      selectattr('host_inventory_name', 'equalto', inventory_hostname) | 
      map(attribute='services') |
      flatten
      }}"

- name: Create docker network for ELKF
  docker_network:
    name: "{{ elkf_stack.network | default(elkf_default_network_name) }}"
    labels: "{{ elkf_group_label }}"

- name: "Run ELKF Containers: ElasticSearch"
  import_tasks: run_elasticsearch.yml
  vars:
    current_host_es_containers: "{{ elkf_host_services | selectattr('name', 'equalto', 'elasticsearch') }}"

- name: "Healthchech ELKF: ElasticSearch"
  docker_container_info:
    name: "{{ first_es_node_name }}"
  register: result
  until: result.container.State.Health.Status == 'healthy'
  retries: 5
  delay: 10
  vars:
    first_es_node_name: "{{ elkf_host_services | selectattr('name', 'equalto', 'elasticsearch') | map(attribute='node_name') | first }}"

- name: "Run ELKF Containers: Kibana"
  import_tasks: run_kibana.yml
  vars:
    current_host_kibana_containers: "{{ elkf_host_services | selectattr('name', 'equalto', 'kibana') }}"

- name: "Run ELKF Containers: Logstash"
  import_tasks: run_logstash.yml
  vars:
    current_host_logstash_containers: "{{ elkf_host_services | selectattr('name', 'equalto', 'logstash') }}"

- name: "Run ELKF Containers: Filebeat"
  import_tasks: run_filebeat.yml
  vars:
    current_host_filebeat_containers: "{{ elkf_host_services | selectattr('name', 'equalto', 'filebeat') }}"